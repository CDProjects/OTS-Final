{"version":3,"file":"static/js/328.94857101.chunk.js","mappings":"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","sources":["Components/ErrorBoundary.js","Components/Fixtures.js"],"sourcesContent":["import React from 'react';\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.log('Error caught by ErrorBoundary:', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Something went wrong. Please try again later.</h1>;\n    }\n\n    return this.props.children;\n  }\n}\n\n\nexport default ErrorBoundary;","import React, { useEffect, useState } from 'react';\nimport ErrorBoundary from './ErrorBoundary';\nimport './Fixtures.css';\nimport shamrocksHRC2024 from '../Images/Games 2025.jpeg';\n\nconst Fixtures = () => {\n  const [competitionTable, setCompetitionTable] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetch('/competitionTable.html')\n      .then(response => response.text())\n      .then(data => {\n        // Parse the HTML string\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(data, 'text/html');\n\n        // Modify the structure of the second column\n        const cells = doc.querySelectorAll('td:nth-child(2)');\n        cells.forEach(cell => {\n          const img = cell.querySelector('img');\n          const text = cell.textContent.trim();\n          cell.innerHTML = `\n            <div class=\"team-info\">\n              ${img ? img.outerHTML : ''}\n              <span>${text}</span>\n            </div>\n          `;\n        });\n\n        // Convert back to string\n        setCompetitionTable(doc.body.innerHTML);\n        setIsLoading(false);\n      })\n      .catch(err => {\n        setError(err);\n        setIsLoading(false);\n      });\n  }, []);\n\n  const fixturesData = [\n    { date: \"24.5\", teams: \"SHAMROCKS - EAGLES\", score: \"0 - 0\" },\n    { date: \"14.6\", teams: \"SHAMROCKS - KALEV\", score: \"0 - 0\" },\n    { date: \"28.6\", teams: \"SHAMROCKS - TAMPERE\", score: \"0 - 0\" },\n    { date: \"5.7\", teams: \"EAGLES - SHAMROCKS\", score: \"0 - 0\" },\n    { date: \"12.7\", teams: \"SHAMROCKS - WARRIORS\", score: \"0 - 0\" },\n    { date: \"26.7\", teams: \"KALEV - SHAMROCKS\", score: \"0 - 0\" },\n    { date: \"9.8\", teams: \"HELSINKI - SHAMROCKS\", score: \"0 - 0\" },\n    { date: \"16.8\", teams: \"TAMPERE - SHAMROCKS\", score: \"0 - 0\" },\n    { date: \"30.8\", teams: \"WARRIORS - SHAMROCKS\", score: \"0 - 0\" },\n    { date: \"6.9\", teams: \"SHAMROCKS - HELSINKI\", score: \"0 - 0\" },\n    { date: \"TBA\", teams: \"SEMI-FINAL\", score: \"0 - 0\" },\n    { date: \"TBA\", teams: \"GRAND FINAL\", score: \"0 - 0\" },\n  ];\n\n  return (\n    <ErrorBoundary>\n      <section id=\"fixtures-section\" className=\"fixtures-section\">\n        {/* … your header, loading/status messages, etc. … */}\n\n      {/*\n        <div id=\"fixtures-marker\"></div>\n        <div className=\"content-container\">\n          <h1 className=\"section-title\">RESULTS & FIXTURES</h1>\n        </div>\n        \n        {isLoading && <p>Loading competition table...</p>}\n        {error && <p>Error loading competition table: {error.message}</p>}\n        {competitionTable && (\n          <div className=\"competition-table-wrapper\">\n          <div className=\"competition-table\" dangerouslySetInnerHTML={{ __html: competitionTable }} />\n        </div>\n        )}   */}\n\n        <picture>\n          <source srcSet={shamrocksHRC2024.replace('.jpg', '.webp')} type=\"image/webp\" />\n          <img src={shamrocksHRC2024} alt=\"3rd game 13th July 2024\" className=\"fixtures-picture\" />\n        </picture>\n        \n        <div className=\"content-container\">\n          <h2 className=\"fixtures-subtitle\">2025 Championship</h2>\n          <h3 className=\"fixtures-subtitle\">OTS FIXTURES &amp; RESULTS</h3>\n          \n          {fixturesData.map((fixture, index) => (\n            <p key={index} className=\"fixtures-text\">\n              <span className=\"date\">{fixture.date}</span>\n              <span className=\"teams\">{fixture.teams}</span>\n              <span className=\"score\"><b>{fixture.score}</b><br /></span>\n            </p>\n          ))}\n        </div>\n      </section>\n    </ErrorBoundary>\n  );\n};\n\nexport default React.memo(Fixtures);"],"names":["ErrorBoundary","React","constructor","props","super","this","state","hasError","getDerivedStateFromError","error","componentDidCatch","errorInfo","console","log","render","_jsx","children","Fixtures","competitionTable","setCompetitionTable","useState","isLoading","setIsLoading","setError","useEffect","fetch","then","response","text","data","doc","DOMParser","parseFromString","querySelectorAll","forEach","cell","img","querySelector","textContent","trim","innerHTML","outerHTML","body","catch","err","_jsxs","id","className","srcSet","shamrocksHRC2024","replace","type","src","alt","date","teams","score","map","fixture","index"],"sourceRoot":""}